"""first

Revision ID: 9ed1d42c0d4b
Revises: 
Create Date: 2021-12-24 07:26:42.447015

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9ed1d42c0d4b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('area_class',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=True),
    sa.Column('label', sa.String(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('organization',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=True),
    sa.Column('abbreviation', sa.String(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scientific_name',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rank', sa.String(length=50), nullable=True),
    sa.Column('full_scientific_name', sa.String(length=500), nullable=True),
    sa.Column('first_epithet', sa.String(length=500), nullable=True),
    sa.Column('infraspecific_epithet', sa.String(length=500), nullable=True),
    sa.Column('author', sa.String(length=500), nullable=True),
    sa.Column('canonical_name', sa.String(length=500), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('common_name', sa.String(length=500), nullable=True),
    sa.Column('source_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dataset',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('named_area',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=True),
    sa.Column('name_en', sa.String(length=500), nullable=True),
    sa.Column('code', sa.String(length=500), nullable=True),
    sa.Column('area_class_id', sa.Integer(), nullable=True),
    sa.Column('source_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['area_class_id'], ['area_class.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('person',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=500), nullable=True),
    sa.Column('atomized_name', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('sorting_name', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('abbreviated_name', sa.String(length=500), nullable=True),
    sa.Column('preferredName', sa.String(length=500), nullable=True),
    sa.Column('is_collector', sa.Boolean(), nullable=True),
    sa.Column('is_identifier', sa.Boolean(), nullable=True),
    sa.Column('source_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.Column('organization', sa.String(length=500), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('collection',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('collect_date', sa.DateTime(), nullable=True),
    sa.Column('collect_date_text', sa.String(length=500), nullable=True),
    sa.Column('collector_id', sa.Integer(), nullable=True),
    sa.Column('field_number', sa.String(length=500), nullable=True),
    sa.Column('companion_text', sa.String(length=500), nullable=True),
    sa.Column('sex', sa.String(length=500), nullable=True),
    sa.Column('age', sa.String(length=500), nullable=True),
    sa.Column('locality_text', sa.String(length=500), nullable=True),
    sa.Column('locality_text2', sa.String(length=500), nullable=True),
    sa.Column('altitude', sa.Integer(), nullable=True),
    sa.Column('altitude2', sa.Integer(), nullable=True),
    sa.Column('latitude_decimal', sa.Numeric(precision=9, scale=6), nullable=True),
    sa.Column('longitude_decimal', sa.Numeric(precision=9, scale=6), nullable=True),
    sa.Column('latitude_text', sa.String(length=50), nullable=True),
    sa.Column('longitude_text', sa.String(length=50), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('changed', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['collector_id'], ['person.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('collection_named_area',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('collection_id', sa.Integer(), nullable=True),
    sa.Column('named_area_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['collection_id'], ['collection.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['named_area_id'], ['named_area.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('collection_person',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('collection_id', sa.Integer(), nullable=True),
    sa.Column('person_id', sa.Integer(), nullable=True),
    sa.Column('role', sa.String(length=50), nullable=True),
    sa.Column('sequence', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['collection_id'], ['collection.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['person_id'], ['person.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('identification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('collection_id', sa.Integer(), nullable=True),
    sa.Column('identifier_id', sa.Integer(), nullable=True),
    sa.Column('scientific_name_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('date_text', sa.String(length=50), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('changed', sa.DateTime(), nullable=True),
    sa.Column('verification_level', sa.String(length=50), nullable=True),
    sa.Column('reference', sa.Text(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('source_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['collection_id'], ['collection.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['identifier_id'], ['person.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['scientific_name_id'], ['scientific_name.id'], ondelete='set NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('other_field_number',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('collection_id', sa.Integer(), nullable=True),
    sa.Column('value', sa.String(length=500), nullable=True),
    sa.Column('collector_id', sa.Integer(), nullable=True),
    sa.Column('collector_name', sa.String(length=500), nullable=True),
    sa.ForeignKeyConstraint(['collection_id'], ['collection.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['collector_id'], ['person.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('unit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dataset_id', sa.Integer(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('changed', sa.DateTime(), nullable=True),
    sa.Column('kind_of_unit', sa.String(length=500), nullable=True),
    sa.Column('collection_id', sa.Integer(), nullable=True),
    sa.Column('accession_number', sa.String(length=500), nullable=True),
    sa.Column('duplication_number', sa.String(length=500), nullable=True),
    sa.Column('preparation_type', sa.String(length=500), nullable=True),
    sa.Column('preparation_date', sa.Date(), nullable=True),
    sa.Column('acquisition_type', sa.String(length=500), nullable=True),
    sa.Column('acquisition_date', sa.DateTime(), nullable=True),
    sa.Column('acquired_from', sa.Integer(), nullable=True),
    sa.Column('acquisition_source_text', sa.Text(), nullable=True),
    sa.Column('source_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('information_withheld', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['acquired_from'], ['person.id'], ),
    sa.ForeignKeyConstraint(['collection_id'], ['collection.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['dataset_id'], ['dataset.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('measurement_or_fact',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('collection_id', sa.Integer(), nullable=True),
    sa.Column('unit_id', sa.Integer(), nullable=True),
    sa.Column('parameter', sa.String(length=500), nullable=True),
    sa.Column('text', sa.String(length=500), nullable=True),
    sa.ForeignKeyConstraint(['collection_id'], ['collection.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['unit_id'], ['unit.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('unit_mark',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('unit_id', sa.Integer(), nullable=True),
    sa.Column('mark_type', sa.String(length=50), nullable=True),
    sa.Column('mark_text', sa.String(length=500), nullable=True),
    sa.Column('mark_author', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['mark_author'], ['person.id'], ),
    sa.ForeignKeyConstraint(['unit_id'], ['unit.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('unit_mark')
    op.drop_table('measurement_or_fact')
    op.drop_table('unit')
    op.drop_table('other_field_number')
    op.drop_table('identification')
    op.drop_table('collection_person')
    op.drop_table('collection_named_area')
    op.drop_table('collection')
    op.drop_table('person')
    op.drop_table('named_area')
    op.drop_table('dataset')
    op.drop_table('scientific_name')
    op.drop_table('organization')
    op.drop_table('area_class')
    # ### end Alembic commands ###
