"""rename scientific_name to taxon

Revision ID: d91c983451cb
Revises: f97b4cd7df9d
Create Date: 2022-01-07 19:49:17.019856

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd91c983451cb'
down_revision = 'f97b4cd7df9d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('taxon',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rank', sa.String(length=50), nullable=True),
    sa.Column('full_scientific_name', sa.String(length=500), nullable=True),
    sa.Column('first_epithet', sa.String(length=500), nullable=True),
    sa.Column('infraspecific_epithet', sa.String(length=500), nullable=True),
    sa.Column('author', sa.String(length=500), nullable=True),
    sa.Column('canonical_name', sa.String(length=500), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('common_name', sa.String(length=500), nullable=True),
    sa.Column('code', sa.String(length=500), nullable=True),
    sa.Column('source_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('scientific_name')
    op.add_column('identification', sa.Column('taxon_id', sa.Integer(), nullable=True))
    op.drop_constraint('identification_scientific_name_id_fkey', 'identification', type_='foreignkey')
    op.create_foreign_key(None, 'identification', 'taxon', ['taxon_id'], ['id'], ondelete='set NULL')
    op.drop_column('identification', 'scientific_name_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('identification', sa.Column('scientific_name_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'identification', type_='foreignkey')
    op.create_foreign_key('identification_scientific_name_id_fkey', 'identification', 'scientific_name', ['scientific_name_id'], ['id'], ondelete='SET NULL')
    op.drop_column('identification', 'taxon_id')
    op.create_table('scientific_name',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('rank', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('full_scientific_name', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('first_epithet', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('infraspecific_epithet', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('author', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('canonical_name', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('common_name', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('source_data', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='scientific_name_pkey')
    )
    op.drop_table('taxon')
    # ### end Alembic commands ###
